{\rtf1\ansi\ansicpg1252\cocoartf1265\cocoasubrtf210
{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red64\green11\blue217;\red193\green101\blue28;\red200\green20\blue201;
\red46\green174\blue187;\red180\green36\blue25;}
\margl1440\margr1440\vieww10800\viewh14060\viewkind0
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f0\fs22 \cf2 \CocoaLigature0 # System-wide .bashrc file for interactive bash(1) shells.\cf0 \
\
\cf2 # To enable the settings / commands in this file for login shells as well,\cf0 \
\cf2 # this file has to be sourced in /etc/profile.\cf0 \
\
\cf2 # If not running interactively, don't do anything\cf0 \
\cf3 [\cf0  \cf3 -z\cf0  \cf3 "\cf4 $PS1\cf3 "\cf0  \cf3 ]\cf0  && \cf3 return\cf0 \
\
\cf2 # check the window size after each command and, if necessary,\cf0 \
\cf2 # update the values of LINES and COLUMNS.\cf0 \
\cf3 shopt\cf0  \cf4 -s\cf0  checkwinsize\
\
\cf2 # set variable identifying the chroot you work in (used in the prompt below)\cf0 \
\cf3 if [\cf0  \cf3 -z\cf0  \cf3 "\cf4 $\{debian_chroot\cf3 :-\cf4 \}\cf3 "\cf0  \cf3 ]\cf0  && \cf3 [\cf0  \cf3 -r\cf0  /etc/debian_chroot \cf3 ]\cf0 ; \cf3 then\cf0 \
    \cf5 debian_chroot\cf0 =\cf4 $(cat /etc/debian_chroot)\cf0 \
\cf3 fi\cf0 \
\
\cf2 # set a fancy prompt (non-color, overwrite the one in /etc/profile)\cf0 \
\cf5 PS1\cf0 =\cf3 '\cf6 $\{debian_chroot:+($debian_chroot)\}\\u@\\h:\\w\\$ \cf3 '\cf0 \
\
\cf2 # Commented out, don't overwrite xterm -T "title" -n "icontitle" by default.\cf0 \
\cf2 # If this is an xterm set the title to user@host:dir\cf0 \
\cf2 #case "$TERM" in\cf0 \
\cf2 #xterm*|rxvt*)\cf0 \
\cf2 #    PROMPT_COMMAND='echo -ne "\\033]0;$\{USER\}@$\{HOSTNAME\}: $\{PWD\}\\007"'\cf0 \
\cf2 #    ;;\cf0 \
\cf2 #*)\cf0 \
\cf2 #    ;;\cf0 \
\cf2 #esac\cf0 \
\
\cf2 # enable bash completion in interactive shells\cf0 \
\cf2 #if ! shopt -oq posix; then\cf0 \
\cf2 #  if [ -f /usr/share/bash-completion/bash_completion ]; then\cf0 \
\cf2 #    . /usr/share/bash-completion/bash_completion\cf0 \
\cf2 #  elif [ -f /etc/bash_completion ]; then\cf0 \
\cf2 #    . /etc/bash_completion\cf0 \
\cf2 #  fi\
# sudo hint\cf0 \
\cf3 if [\cf0  \cf3 !\cf0  \cf3 -e\cf0  \cf3 "\cf4 $HOME\cf6 /.sudo_as_admin_successful\cf3 "\cf0  \cf3 ]\cf0  && \cf3 [\cf0  \cf3 !\cf0  \cf3 -e\cf0  \cf3 "\cf4 $HOME\cf6 /.hushlogin\cf3 "\cf0  \cf3 ]\cf0  ; \cf3 then\cf0 \
    \cf3 case\cf0  \cf3 "\cf6  \cf4 $(groups)\cf6  \cf3 "\cf0  \cf3 in\cf0  *\\ admin\\ *\cf3 )\cf0 \
    \cf3 if [\cf0  \cf3 -x\cf0  /usr/bin/sudo \cf3 ]\cf0 ; \cf3 then\cf0 \
        cat \cf3 <<-EOF\cf0 \
\cf6         To run a command as administrator (user "root"), use "sudo <command>".\cf0 \
\cf6         See "man sudo_root" for details.\cf0 \
\cf6         \cf0 \
\cf3         EOF\cf0 \
    \cf3 fi\cf0 \
    \cf3 esac\cf0 \
\cf3 fi\cf0 \
\
\cf2 # if the command-not-found package is installed, use it\cf0 \
\cf3 if [\cf0  \cf3 -x\cf0  /usr/lib/command-not-found \cf3 -o\cf0  \cf3 -x\cf0  /usr/share/command-not-found/command-not-found \cf3 ]\cf0 ; \cf3 then\cf0 \
        \cf5 function\cf0  \cf5 command_not_found_handle \{\cf0 \
                \cf2 # check because c-n-f could've been removed in the meantime\cf0 \
                \cf3 if [\cf0  \cf3 -x\cf0  /usr/lib/command-not-found \cf3 ]\cf0 ; \cf3 then\cf0 \
                   /usr/lib/\cf3 command\cf0 -not-found \cf4 --\cf0  \cf3 "\cf4 $1\cf3 "\cf0 \
                   \cf3 return\cf0  \cf4 $?\cf0 \
                \cf3 elif\cf0  \cf3 [\cf0  \cf3 -x\cf0  /usr/share/command-not-found/command-not-found \cf3 ]\cf0 ; \cf3 then\cf0 \
                   /usr/share/\cf3 command\cf0 -not-found/\cf3 command\cf0 -not-found \cf4 --\cf0  \cf3 "\cf4 $1\cf3 "\cf0 \
                   \cf3 return\cf0  \cf4 $?\cf0 \
                \cf3 else\cf0 \
                   \cf3 printf\cf0  \cf3 "\cf6 %s: command not found\cf4 \\n\cf3 "\cf0  \cf3 "\cf4 $1\cf3 "\cf0  \cf3 >\cf0 &\cf6 2\cf0 \
                   \cf3 return\cf0  \cf6 127\cf0 \
                \cf3 fi\cf0 \
        \cf5 \}\cf0 \
\cf3 fi}